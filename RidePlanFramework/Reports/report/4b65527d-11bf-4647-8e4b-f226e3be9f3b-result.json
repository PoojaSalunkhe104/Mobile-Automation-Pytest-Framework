{"name": "test_VerifycontinuePages", "status": "broken", "statusDetails": {"message": "ValueError: setup did not yield a value", "trace": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x108ad55a0>, when = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\nvenv/lib/python3.10/site-packages/_pytest/runner.py:338: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.10/site-packages/_pytest/runner.py:259: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nvenv/lib/python3.10/site-packages/pluggy/_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nvenv/lib/python3.10/site-packages/pluggy/_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nvenv/lib/python3.10/site-packages/_pytest/runner.py:154: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\nvenv/lib/python3.10/site-packages/_pytest/runner.py:494: in setup\n    raise exc\nvenv/lib/python3.10/site-packages/_pytest/runner.py:491: in setup\n    col.setup()\nvenv/lib/python3.10/site-packages/_pytest/python.py:1764: in setup\n    self._request._fillfixtures()\nvenv/lib/python3.10/site-packages/_pytest/fixtures.py:541: in _fillfixtures\n    item.funcargs[argname] = self.getfixturevalue(argname)\nvenv/lib/python3.10/site-packages/_pytest/fixtures.py:554: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\nvenv/lib/python3.10/site-packages/_pytest/fixtures.py:573: in _get_active_fixturedef\n    self._compute_fixture_value(fixturedef)\nvenv/lib/python3.10/site-packages/_pytest/fixtures.py:659: in _compute_fixture_value\n    fixturedef.execute(request=subrequest)\nvenv/lib/python3.10/site-packages/_pytest/fixtures.py:1057: in execute\n    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)\nvenv/lib/python3.10/site-packages/pluggy/_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nvenv/lib/python3.10/site-packages/pluggy/_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nvenv/lib/python3.10/site-packages/_pytest/fixtures.py:1111: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfixturefunc = <function setup at 0x107be00d0>, request = <SubRequest 'setup' for <Function test_VerifycontinuePages>>, kwargs = {'os': 'iOS'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n>               raise ValueError(f\"{request.fixturename} did not yield a value\") from None\nE               ValueError: setup did not yield a value\n\nvenv/lib/python3.10/site-packages/_pytest/fixtures.py:885: ValueError"}, "attachments": [{"name": "stdout", "source": "3d896b42-c0cd-4eea-b758-32f605f97ad3-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "22e235d7-736b-449d-8add-72b4f80f7c07-attachment.txt", "type": "text/plain"}], "start": 1661337089021, "stop": 1661337089021, "uuid": "4632d2da-2f86-4f63-9fb7-1d27c4a20c4b", "historyId": "1bcce9a7585e171c3aebaed63aeeb732", "testCaseId": "28b743ae14705f1ea5d98ed8925588e9", "fullName": "test_VerifyOnboardingPages.Test_001_VerifyStartingPages#test_VerifycontinuePages", "labels": [{"name": "suite", "value": "test_VerifyOnboardingPages"}, {"name": "subSuite", "value": "Test_001_VerifyStartingPages"}, {"name": "host", "value": "Macbooks-MacBook-Pro.local"}, {"name": "thread", "value": "11863-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_VerifyOnboardingPages"}]}